// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rococo-painting.proto

package guru.qa.grpc.rococo.grpc;

/**
 * Protobuf type {@code guru.qa.grpc.rococo.AllPaintingResponse}
 */
public final class AllPaintingResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:guru.qa.grpc.rococo.AllPaintingResponse)
    AllPaintingResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AllPaintingResponse.newBuilder() to construct.
  private AllPaintingResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AllPaintingResponse() {
    painting_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AllPaintingResponse();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return guru.qa.grpc.rococo.grpc.RococoPaintingProto.internal_static_guru_qa_grpc_rococo_AllPaintingResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return guru.qa.grpc.rococo.grpc.RococoPaintingProto.internal_static_guru_qa_grpc_rococo_AllPaintingResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            guru.qa.grpc.rococo.grpc.AllPaintingResponse.class, guru.qa.grpc.rococo.grpc.AllPaintingResponse.Builder.class);
  }

  public static final int PAINTING_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<guru.qa.grpc.rococo.grpc.PaintingResponse> painting_;
  /**
   * <code>repeated .guru.qa.grpc.rococo.PaintingResponse painting = 1;</code>
   */
  @java.lang.Override
  public java.util.List<guru.qa.grpc.rococo.grpc.PaintingResponse> getPaintingList() {
    return painting_;
  }
  /**
   * <code>repeated .guru.qa.grpc.rococo.PaintingResponse painting = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends guru.qa.grpc.rococo.grpc.PaintingResponseOrBuilder> 
      getPaintingOrBuilderList() {
    return painting_;
  }
  /**
   * <code>repeated .guru.qa.grpc.rococo.PaintingResponse painting = 1;</code>
   */
  @java.lang.Override
  public int getPaintingCount() {
    return painting_.size();
  }
  /**
   * <code>repeated .guru.qa.grpc.rococo.PaintingResponse painting = 1;</code>
   */
  @java.lang.Override
  public guru.qa.grpc.rococo.grpc.PaintingResponse getPainting(int index) {
    return painting_.get(index);
  }
  /**
   * <code>repeated .guru.qa.grpc.rococo.PaintingResponse painting = 1;</code>
   */
  @java.lang.Override
  public guru.qa.grpc.rococo.grpc.PaintingResponseOrBuilder getPaintingOrBuilder(
      int index) {
    return painting_.get(index);
  }

  public static final int TOTAL_COUNT_FIELD_NUMBER = 2;
  private int totalCount_ = 0;
  /**
   * <code>int32 total_count = 2;</code>
   * @return The totalCount.
   */
  @java.lang.Override
  public int getTotalCount() {
    return totalCount_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < painting_.size(); i++) {
      output.writeMessage(1, painting_.get(i));
    }
    if (totalCount_ != 0) {
      output.writeInt32(2, totalCount_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < painting_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, painting_.get(i));
    }
    if (totalCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, totalCount_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof guru.qa.grpc.rococo.grpc.AllPaintingResponse)) {
      return super.equals(obj);
    }
    guru.qa.grpc.rococo.grpc.AllPaintingResponse other = (guru.qa.grpc.rococo.grpc.AllPaintingResponse) obj;

    if (!getPaintingList()
        .equals(other.getPaintingList())) return false;
    if (getTotalCount()
        != other.getTotalCount()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getPaintingCount() > 0) {
      hash = (37 * hash) + PAINTING_FIELD_NUMBER;
      hash = (53 * hash) + getPaintingList().hashCode();
    }
    hash = (37 * hash) + TOTAL_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getTotalCount();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static guru.qa.grpc.rococo.grpc.AllPaintingResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static guru.qa.grpc.rococo.grpc.AllPaintingResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static guru.qa.grpc.rococo.grpc.AllPaintingResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static guru.qa.grpc.rococo.grpc.AllPaintingResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static guru.qa.grpc.rococo.grpc.AllPaintingResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static guru.qa.grpc.rococo.grpc.AllPaintingResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static guru.qa.grpc.rococo.grpc.AllPaintingResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static guru.qa.grpc.rococo.grpc.AllPaintingResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static guru.qa.grpc.rococo.grpc.AllPaintingResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static guru.qa.grpc.rococo.grpc.AllPaintingResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static guru.qa.grpc.rococo.grpc.AllPaintingResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static guru.qa.grpc.rococo.grpc.AllPaintingResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(guru.qa.grpc.rococo.grpc.AllPaintingResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code guru.qa.grpc.rococo.AllPaintingResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:guru.qa.grpc.rococo.AllPaintingResponse)
      guru.qa.grpc.rococo.grpc.AllPaintingResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return guru.qa.grpc.rococo.grpc.RococoPaintingProto.internal_static_guru_qa_grpc_rococo_AllPaintingResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return guru.qa.grpc.rococo.grpc.RococoPaintingProto.internal_static_guru_qa_grpc_rococo_AllPaintingResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              guru.qa.grpc.rococo.grpc.AllPaintingResponse.class, guru.qa.grpc.rococo.grpc.AllPaintingResponse.Builder.class);
    }

    // Construct using guru.qa.grpc.rococo.grpc.AllPaintingResponse.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (paintingBuilder_ == null) {
        painting_ = java.util.Collections.emptyList();
      } else {
        painting_ = null;
        paintingBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      totalCount_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return guru.qa.grpc.rococo.grpc.RococoPaintingProto.internal_static_guru_qa_grpc_rococo_AllPaintingResponse_descriptor;
    }

    @java.lang.Override
    public guru.qa.grpc.rococo.grpc.AllPaintingResponse getDefaultInstanceForType() {
      return guru.qa.grpc.rococo.grpc.AllPaintingResponse.getDefaultInstance();
    }

    @java.lang.Override
    public guru.qa.grpc.rococo.grpc.AllPaintingResponse build() {
      guru.qa.grpc.rococo.grpc.AllPaintingResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public guru.qa.grpc.rococo.grpc.AllPaintingResponse buildPartial() {
      guru.qa.grpc.rococo.grpc.AllPaintingResponse result = new guru.qa.grpc.rococo.grpc.AllPaintingResponse(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(guru.qa.grpc.rococo.grpc.AllPaintingResponse result) {
      if (paintingBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          painting_ = java.util.Collections.unmodifiableList(painting_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.painting_ = painting_;
      } else {
        result.painting_ = paintingBuilder_.build();
      }
    }

    private void buildPartial0(guru.qa.grpc.rococo.grpc.AllPaintingResponse result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.totalCount_ = totalCount_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof guru.qa.grpc.rococo.grpc.AllPaintingResponse) {
        return mergeFrom((guru.qa.grpc.rococo.grpc.AllPaintingResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(guru.qa.grpc.rococo.grpc.AllPaintingResponse other) {
      if (other == guru.qa.grpc.rococo.grpc.AllPaintingResponse.getDefaultInstance()) return this;
      if (paintingBuilder_ == null) {
        if (!other.painting_.isEmpty()) {
          if (painting_.isEmpty()) {
            painting_ = other.painting_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePaintingIsMutable();
            painting_.addAll(other.painting_);
          }
          onChanged();
        }
      } else {
        if (!other.painting_.isEmpty()) {
          if (paintingBuilder_.isEmpty()) {
            paintingBuilder_.dispose();
            paintingBuilder_ = null;
            painting_ = other.painting_;
            bitField0_ = (bitField0_ & ~0x00000001);
            paintingBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPaintingFieldBuilder() : null;
          } else {
            paintingBuilder_.addAllMessages(other.painting_);
          }
        }
      }
      if (other.getTotalCount() != 0) {
        setTotalCount(other.getTotalCount());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              guru.qa.grpc.rococo.grpc.PaintingResponse m =
                  input.readMessage(
                      guru.qa.grpc.rococo.grpc.PaintingResponse.parser(),
                      extensionRegistry);
              if (paintingBuilder_ == null) {
                ensurePaintingIsMutable();
                painting_.add(m);
              } else {
                paintingBuilder_.addMessage(m);
              }
              break;
            } // case 10
            case 16: {
              totalCount_ = input.readInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<guru.qa.grpc.rococo.grpc.PaintingResponse> painting_ =
      java.util.Collections.emptyList();
    private void ensurePaintingIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        painting_ = new java.util.ArrayList<guru.qa.grpc.rococo.grpc.PaintingResponse>(painting_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        guru.qa.grpc.rococo.grpc.PaintingResponse, guru.qa.grpc.rococo.grpc.PaintingResponse.Builder, guru.qa.grpc.rococo.grpc.PaintingResponseOrBuilder> paintingBuilder_;

    /**
     * <code>repeated .guru.qa.grpc.rococo.PaintingResponse painting = 1;</code>
     */
    public java.util.List<guru.qa.grpc.rococo.grpc.PaintingResponse> getPaintingList() {
      if (paintingBuilder_ == null) {
        return java.util.Collections.unmodifiableList(painting_);
      } else {
        return paintingBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .guru.qa.grpc.rococo.PaintingResponse painting = 1;</code>
     */
    public int getPaintingCount() {
      if (paintingBuilder_ == null) {
        return painting_.size();
      } else {
        return paintingBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .guru.qa.grpc.rococo.PaintingResponse painting = 1;</code>
     */
    public guru.qa.grpc.rococo.grpc.PaintingResponse getPainting(int index) {
      if (paintingBuilder_ == null) {
        return painting_.get(index);
      } else {
        return paintingBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .guru.qa.grpc.rococo.PaintingResponse painting = 1;</code>
     */
    public Builder setPainting(
        int index, guru.qa.grpc.rococo.grpc.PaintingResponse value) {
      if (paintingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePaintingIsMutable();
        painting_.set(index, value);
        onChanged();
      } else {
        paintingBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .guru.qa.grpc.rococo.PaintingResponse painting = 1;</code>
     */
    public Builder setPainting(
        int index, guru.qa.grpc.rococo.grpc.PaintingResponse.Builder builderForValue) {
      if (paintingBuilder_ == null) {
        ensurePaintingIsMutable();
        painting_.set(index, builderForValue.build());
        onChanged();
      } else {
        paintingBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .guru.qa.grpc.rococo.PaintingResponse painting = 1;</code>
     */
    public Builder addPainting(guru.qa.grpc.rococo.grpc.PaintingResponse value) {
      if (paintingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePaintingIsMutable();
        painting_.add(value);
        onChanged();
      } else {
        paintingBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .guru.qa.grpc.rococo.PaintingResponse painting = 1;</code>
     */
    public Builder addPainting(
        int index, guru.qa.grpc.rococo.grpc.PaintingResponse value) {
      if (paintingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePaintingIsMutable();
        painting_.add(index, value);
        onChanged();
      } else {
        paintingBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .guru.qa.grpc.rococo.PaintingResponse painting = 1;</code>
     */
    public Builder addPainting(
        guru.qa.grpc.rococo.grpc.PaintingResponse.Builder builderForValue) {
      if (paintingBuilder_ == null) {
        ensurePaintingIsMutable();
        painting_.add(builderForValue.build());
        onChanged();
      } else {
        paintingBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .guru.qa.grpc.rococo.PaintingResponse painting = 1;</code>
     */
    public Builder addPainting(
        int index, guru.qa.grpc.rococo.grpc.PaintingResponse.Builder builderForValue) {
      if (paintingBuilder_ == null) {
        ensurePaintingIsMutable();
        painting_.add(index, builderForValue.build());
        onChanged();
      } else {
        paintingBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .guru.qa.grpc.rococo.PaintingResponse painting = 1;</code>
     */
    public Builder addAllPainting(
        java.lang.Iterable<? extends guru.qa.grpc.rococo.grpc.PaintingResponse> values) {
      if (paintingBuilder_ == null) {
        ensurePaintingIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, painting_);
        onChanged();
      } else {
        paintingBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .guru.qa.grpc.rococo.PaintingResponse painting = 1;</code>
     */
    public Builder clearPainting() {
      if (paintingBuilder_ == null) {
        painting_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        paintingBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .guru.qa.grpc.rococo.PaintingResponse painting = 1;</code>
     */
    public Builder removePainting(int index) {
      if (paintingBuilder_ == null) {
        ensurePaintingIsMutable();
        painting_.remove(index);
        onChanged();
      } else {
        paintingBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .guru.qa.grpc.rococo.PaintingResponse painting = 1;</code>
     */
    public guru.qa.grpc.rococo.grpc.PaintingResponse.Builder getPaintingBuilder(
        int index) {
      return getPaintingFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .guru.qa.grpc.rococo.PaintingResponse painting = 1;</code>
     */
    public guru.qa.grpc.rococo.grpc.PaintingResponseOrBuilder getPaintingOrBuilder(
        int index) {
      if (paintingBuilder_ == null) {
        return painting_.get(index);  } else {
        return paintingBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .guru.qa.grpc.rococo.PaintingResponse painting = 1;</code>
     */
    public java.util.List<? extends guru.qa.grpc.rococo.grpc.PaintingResponseOrBuilder> 
         getPaintingOrBuilderList() {
      if (paintingBuilder_ != null) {
        return paintingBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(painting_);
      }
    }
    /**
     * <code>repeated .guru.qa.grpc.rococo.PaintingResponse painting = 1;</code>
     */
    public guru.qa.grpc.rococo.grpc.PaintingResponse.Builder addPaintingBuilder() {
      return getPaintingFieldBuilder().addBuilder(
          guru.qa.grpc.rococo.grpc.PaintingResponse.getDefaultInstance());
    }
    /**
     * <code>repeated .guru.qa.grpc.rococo.PaintingResponse painting = 1;</code>
     */
    public guru.qa.grpc.rococo.grpc.PaintingResponse.Builder addPaintingBuilder(
        int index) {
      return getPaintingFieldBuilder().addBuilder(
          index, guru.qa.grpc.rococo.grpc.PaintingResponse.getDefaultInstance());
    }
    /**
     * <code>repeated .guru.qa.grpc.rococo.PaintingResponse painting = 1;</code>
     */
    public java.util.List<guru.qa.grpc.rococo.grpc.PaintingResponse.Builder> 
         getPaintingBuilderList() {
      return getPaintingFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        guru.qa.grpc.rococo.grpc.PaintingResponse, guru.qa.grpc.rococo.grpc.PaintingResponse.Builder, guru.qa.grpc.rococo.grpc.PaintingResponseOrBuilder> 
        getPaintingFieldBuilder() {
      if (paintingBuilder_ == null) {
        paintingBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            guru.qa.grpc.rococo.grpc.PaintingResponse, guru.qa.grpc.rococo.grpc.PaintingResponse.Builder, guru.qa.grpc.rococo.grpc.PaintingResponseOrBuilder>(
                painting_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        painting_ = null;
      }
      return paintingBuilder_;
    }

    private int totalCount_ ;
    /**
     * <code>int32 total_count = 2;</code>
     * @return The totalCount.
     */
    @java.lang.Override
    public int getTotalCount() {
      return totalCount_;
    }
    /**
     * <code>int32 total_count = 2;</code>
     * @param value The totalCount to set.
     * @return This builder for chaining.
     */
    public Builder setTotalCount(int value) {
      
      totalCount_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>int32 total_count = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalCount() {
      bitField0_ = (bitField0_ & ~0x00000002);
      totalCount_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:guru.qa.grpc.rococo.AllPaintingResponse)
  }

  // @@protoc_insertion_point(class_scope:guru.qa.grpc.rococo.AllPaintingResponse)
  private static final guru.qa.grpc.rococo.grpc.AllPaintingResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new guru.qa.grpc.rococo.grpc.AllPaintingResponse();
  }

  public static guru.qa.grpc.rococo.grpc.AllPaintingResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AllPaintingResponse>
      PARSER = new com.google.protobuf.AbstractParser<AllPaintingResponse>() {
    @java.lang.Override
    public AllPaintingResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<AllPaintingResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AllPaintingResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public guru.qa.grpc.rococo.grpc.AllPaintingResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

